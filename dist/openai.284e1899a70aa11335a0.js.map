{"version":3,"file":"openai.284e1899a70aa11335a0.js","mappings":"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","sources":["webpack://ai-assessment-trainer/./node_modules/openai/internal/tslib.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/uuid.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/errors.mjs","webpack://ai-assessment-trainer/./node_modules/openai/core/error.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/values.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/sleep.mjs","webpack://ai-assessment-trainer/./node_modules/openai/version.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/detect-platform.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/shims.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/request-options.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/qs/formats.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/qs/utils.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/qs/stringify.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/bytes.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/decoders/line.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/log.mjs","webpack://ai-assessment-trainer/./node_modules/openai/core/streaming.mjs","webpack://ai-assessment-trainer/./node_modules/openai/core/api-promise.mjs","webpack://ai-assessment-trainer/./node_modules/openai/core/pagination.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/parse.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/uploads.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/to-file.mjs","webpack://ai-assessment-trainer/./node_modules/openai/core/resource.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/path.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/chat/completions/messages.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/parser.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/chatCompletionUtils.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/EventStream.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/RunnableFunction.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://ai-assessment-trainer/./node_modules/openai/_vendor/partial-json-parser/parser.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/ChatCompletionStream.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/chat/completions/completions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/chat/chat.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/headers.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/audio/speech.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/audio/translations.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/audio/audio.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/batches.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/assistants.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/realtime/sessions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/realtime/realtime.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/threads/messages.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/base64.mjs","webpack://ai-assessment-trainer/./node_modules/openai/internal/utils/env.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/AssistantStream.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/responses/ResponseStream.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/webhooks.mjs","webpack://ai-assessment-trainer/./node_modules/openai/client.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/threads/threads.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/beta/beta.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/completions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/containers/files/content.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/containers/files/files.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/containers/containers.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/embeddings.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/evals/runs/output-items.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/evals/runs/runs.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/evals/evals.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/files.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/methods.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/alpha/graders.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/alpha/alpha.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/graders/grader-models.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/graders/graders.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/images.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/models.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/moderations.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/ResponsesParser.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/responses/input-items.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/responses/responses.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/uploads/parts.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/uploads/uploads.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/vector-stores/file-batches.mjs","webpack://ai-assessment-trainer/./node_modules/openai/lib/Util.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/vector-stores/files.mjs","webpack://ai-assessment-trainer/./node_modules/openai/resources/vector-stores/vector-stores.mjs","webpack://ai-assessment-trainer/./node_modules/openai/azure.mjs"],"sourcesContent":["function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? () => crypto.getRandomValues(u8)[0] : () => (Math.random() * 0xff) & 0xff;\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) => (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16));\n};\n//# sourceMappingURL=uuid.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n    return (typeof err === 'object' &&\n        err !== null &&\n        // Spec-compliant fetch implementations\n        (('name' in err && err.name === 'AbortError') ||\n            // Expo fetch\n            ('message' in err && String(err.message).includes('FetchRequestCanceledException'))));\n}\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === '[object Error]') {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n                if (err.stack)\n                    error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause)\n                    error.cause = err.cause;\n                if (err.name)\n                    error.name = err.name;\n                return error;\n            }\n        }\n        catch { }\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\n//# sourceMappingURL=errors.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get('x-request-id');\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nexport class InvalidWebhookSignatureError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=error.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = (val) => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n    if (typeof x !== 'object') {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = (value) => {\n    if (value == null) {\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n//# sourceMappingURL=values.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=sleep.mjs.map","export const VERSION = '5.13.1'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { VERSION } from \"../version.mjs\";\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform() {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return 'deno';\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return 'edge';\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== 'undefined' ? globalThis.process : 0) === '[object process]') {\n        return 'node';\n    }\n    return 'unknown';\n}\nconst getPlatformProperties = () => {\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === 'deno') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': globalThis.process.version,\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === 'node') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(globalThis.process.platform ?? 'unknown'),\n            'X-Stainless-Arch': normalizeArch(globalThis.process.arch ?? 'unknown'),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': globalThis.process.version ?? 'unknown',\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nexport const getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\n//# sourceMappingURL=detect-platform.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function getDefaultFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch;\n    }\n    throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');\n}\nexport function makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === 'undefined') {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error('`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`');\n    }\n    return new ReadableStream(...args);\n}\nexport function ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start() { },\n        async pull(controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel() {\n            await iter.return?.();\n        },\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== 'object')\n        return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n}\n//# sourceMappingURL=shims.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const FallbackEncoder = ({ headers, body }) => {\n    return {\n        bodyHeaders: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    };\n};\n//# sourceMappingURL=request-options.mjs.map","export const default_format = 'RFC3986';\nexport const default_formatter = (v) => String(v);\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nexport let has = (obj, key) => ((has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n    has(obj, key));\nconst hex_table = /* @__PURE__ */ (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (isArray(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (isArray(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst push_to_array = function (arr, value_or_array) {\n    Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: default_formatter,\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (isArray(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = isArray(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (isArray(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export function concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers) {\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers) {\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nexport function encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ??\n        ((encoder = new globalThis.TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder))))(str);\n}\nlet decodeUTF8_;\nexport function decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ??\n        ((decoder = new globalThis.TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder))))(bytes);\n}\n//# sourceMappingURL=bytes.mjs.map","var _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../tslib.mjs\";\nimport { concatBytes, decodeUTF8, encodeUTF8 } from \"../utils/bytes.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        __classPrivateFieldSet(this, _LineDecoder_buffer, concatBytes([__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), binaryChunk]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { hasOwn } from \"./values.mjs\";\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500,\n};\nexport const parseLogLevel = (maybeLevel, sourceName, client) => {\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if (hasOwn(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() { }\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    }\n    else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop,\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nexport function loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? 'off';\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn('error', logger, logLevel),\n        warn: makeLogFn('warn', logger, logLevel),\n        info: makeLogFn('info', logger, logLevel),\n        debug: makeLogFn('debug', logger, logLevel),\n    };\n    cachedLoggers.set(logger, [logLevel, levelLogger]);\n    return levelLogger;\n}\nexport const formatRequestDetails = (details) => {\n    if (details.options) {\n        details.options = { ...details.options };\n        delete details.options['headers']; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(([name, value]) => [\n            name,\n            (name.toLowerCase() === 'authorization' ||\n                name.toLowerCase() === 'cookie' ||\n                name.toLowerCase() === 'set-cookie') ?\n                '***'\n                : value,\n        ]));\n    }\n    if ('retryOfRequestLogID' in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n};\n//# sourceMappingURL=log.mjs.map","var _Stream_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { makeReadableStream } from \"../internal/shims.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"../internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../internal/shims.mjs\";\nimport { isAbortError } from \"../internal/errors.mjs\";\nimport { encodeUTF8 } from \"../internal/utils/bytes.mjs\";\nimport { loggerFor } from \"../internal/utils/log.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller, client) {\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        __classPrivateFieldSet(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? loggerFor(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || !sse.event.startsWith('thread.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n            new Stream(() => teeIterator(right), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        return makeReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== 'undefined' &&\n            globalThis.navigator.product === 'ReactNative') {\n            throw new OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { defaultParseResponse, addRequestID, } from \"../internal/parse.mjs\";\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        __classPrivateFieldSet(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props) => addRequestID(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data) => this.parseResponse(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap();\n//# sourceMappingURL=api-promise.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { defaultParseResponse } from \"../internal/parse.mjs\";\nimport { APIPromise } from \"./api-promise.mjs\";\nimport { maybeObj } from \"../internal/utils/values.mjs\";\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(client, request, async (client, props) => new Page(client, props.response, await defaultParseResponse(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: id,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { Stream } from \"../core/streaming.mjs\";\nimport { formatRequestDetails, loggerFor } from \"./utils/log.mjs\";\nexport async function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async () => {\n        if (props.options.stream) {\n            loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get('content-type');\n        const mediaType = contentType?.split(';')[0]?.trim();\n        const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    loggerFor(client).debug(`[${requestLogID}] response parsed`, formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime,\n    }));\n    return body;\n}\nexport function addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n//# sourceMappingURL=parse.mjs.map","import { ReadableStreamFrom } from \"./shims.mjs\";\nexport const checkFileSupport = () => {\n    if (typeof File === 'undefined') {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n        throw new Error('`File` is not defined as a global, which is required for file uploads.' +\n            (isOldNode ?\n                \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n                : ''));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? 'unknown_file', options);\n}\nexport function getName(value) {\n    return (((typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n            ('url' in value && value.url && String(value.url)) ||\n            ('filename' in value && value.filename && String(value.filename)) ||\n            ('path' in value && value.path && String(value.path)))) ||\n        '')\n        .split(/[\\\\/]/)\n        .pop() || undefined);\n}\nexport const isAsyncIterable = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts, fetch) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nexport const multipartFormRequestOptions = async (opts, fetch) => {\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached)\n        return cached;\n    const promise = (async () => {\n        try {\n            const FetchResponse = ('Response' in fetch ?\n                fetch.Response\n                : (await fetch('data:,')).constructor);\n            const data = new FormData();\n            if (data.toString() === (await new FetchResponse(data).text())) {\n                return false;\n            }\n            return true;\n        }\n        catch {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nexport const createForm = async (body, fetch) => {\n    if (!(await supportsFormData(fetch))) {\n        throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value) => value instanceof Blob && 'name' in value;\nconst isUploadable = (value) => typeof value === 'object' &&\n    value !== null &&\n    (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (value instanceof Response) {\n        form.append(key, makeFile([await value.blob()], getName(value)));\n    }\n    else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n    }\n    else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","import { getName, makeFile, isAsyncIterable } from \"./uploads.mjs\";\nimport { checkFileSupport } from \"./uploads.mjs\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    checkFileSupport();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return makeFile([await value.arrayBuffer()], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return makeFile(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = getName(value));\n    if (!options?.type) {\n        const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return makeFile(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    }\n    else if (isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(...(await getBytes(chunk))); // TODO, consider validating?\n        }\n    }\n    else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : ''}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== 'object' || value === null)\n        return '';\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n//# sourceMappingURL=to-file.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","import { OpenAIError } from \"../../core/error.mjs\";\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) => function path(statics, ...params) {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1)\n        return statics[0];\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n        if (/[?#]/.test(currentValue)) {\n            postPath = true;\n        }\n        const value = params[index];\n        let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n        if (index !== params.length &&\n            (value == null ||\n                (typeof value === 'object' &&\n                    // handle values from other realms\n                    value.toString ===\n                        Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)\n                            ?.toString))) {\n            encoded = value + '';\n            invalidSegments.push({\n                start: previousValue.length + currentValue.length,\n                length: encoded.length,\n                error: `Value of type ${Object.prototype.toString\n                    .call(value)\n                    .slice(8, -1)} is not a valid path parameter`,\n            });\n        }\n        return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n        invalidSegments.push({\n            start: match.index,\n            length: match[0].length,\n            error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`,\n        });\n    }\n    invalidSegments.sort((a, b) => a.start - b.start);\n    if (invalidSegments.length > 0) {\n        let lastEnd = 0;\n        const underline = invalidSegments.reduce((acc, segment) => {\n            const spaces = ' '.repeat(segment.start - lastEnd);\n            const arrows = '^'.repeat(segment.length);\n            lastEnd = segment.start + segment.length;\n            return acc + spaces + arrows;\n        }, '');\n        throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments\n            .map((e) => e.error)\n            .join('\\n')}\\n${path}\\n${underline}`);\n    }\n    return path;\n};\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n//# sourceMappingURL=path.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(completionID, query = {}, options) {\n        return this._client.getAPIList(path `/chat/completions/${completionID}/messages`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function isChatCompletionFunctionTool(tool) {\n    return tool !== undefined && 'function' in tool && tool.function !== undefined;\n}\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => {\n                assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n                return {\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...(choice.message.tool_calls ?\n                            {\n                                tool_calls: choice.message.tool_calls,\n                            }\n                            : undefined),\n                    },\n                };\n            }),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name); // TS doesn't narrow based on isChatCompletionTool\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params || !('tools' in params) || !params.tools) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name);\n    return (isChatCompletionFunctionTool(inputTool) &&\n        (isAutoParsableTool(inputTool) || inputTool?.function.strict || false));\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function assertToolCallsAreChatCompletionFunctionToolCalls(toolCalls) {\n    for (const toolCall of toolCalls || []) {\n        if (toolCall.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool calls are supported; Received \\`${toolCall.type}\\``);\n        }\n    }\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","var _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nimport { isAssistantMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if (isToolMessage(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionToolCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionToolCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionToolCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionToolCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice.type === 'function' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.filter((x) => x.type === 'function').at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nimport { APIUserAbortError, ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError, } from \"../error.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, isChatCompletionFunctionTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => isChatCompletionFunctionTool(tool) && tool.function.name === toolCallSnapshot.function.name); // TS doesn't narrow based on isChatCompletionTool\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionID, options) {\n        return this._client.get(path `/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionID, body, options) {\n        return this._client.post(path `/chat/completions/${completionID}`, { body, ...options });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/chat/completions', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */\n    delete(completionID, options) {\n        return this._client.delete(path `/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { isReadonlyArray } from \"./utils/values.mjs\";\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\nfunction* iterateHeaders(headers) {\n    if (!headers)\n        return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls) {\n            yield [name, null];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    }\n    else if (isReadonlyArray(headers)) {\n        iter = headers;\n    }\n    else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter) {\n        const name = row[0];\n        if (typeof name !== 'string')\n            throw new TypeError('expected header name to be a string');\n        const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n        let didClear = false;\n        for (const value of values) {\n            if (value === undefined)\n                continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [name, null];\n            }\n            yield [name, value];\n        }\n    }\n}\nexport const buildHeaders = (newHeaders) => {\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders) {\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)) {\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            }\n            else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\nexport const isEmptyHeaders = (headers) => {\n    for (const _ of iterateHeaders(headers))\n        return false;\n    return true;\n};\n//# sourceMappingURL=headers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }, this._client));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchID, options) {\n        return this._client.get(path `/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/batches', (CursorPage), { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchID, options) {\n        return this._client.post(path `/batches/${batchID}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantID, options) {\n        return this._client.get(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantID, body, options) {\n        return this._client.post(path `/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/assistants', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */\n    delete(assistantID, options) {\n        return this._client.delete(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/messages`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(path `/threads/${thread_id}/runs/${runID}/steps`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\nimport { encodeUTF8 } from \"./bytes.mjs\";\nexport const toBase64 = (data) => {\n    if (!data)\n        return '';\n    if (typeof globalThis.Buffer !== 'undefined') {\n        return globalThis.Buffer.from(data).toString('base64');\n    }\n    if (typeof data === 'string') {\n        data = encodeUTF8(data);\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport const fromBase64 = (str) => {\n    if (typeof globalThis.Buffer !== 'undefined') {\n        const buf = globalThis.Buffer.from(str, 'base64');\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== 'undefined') {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\n//# sourceMappingURL=base64.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof globalThis.process !== 'undefined') {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== 'undefined') {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\n//# sourceMappingURL=env.mjs.map","var _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isObj } from \"../internal/utils.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runToolAssistantStream(runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (isObj(accValue) && isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n        case 'thread.run.incomplete':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","var _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { InvalidWebhookSignatureError } from \"../error.mjs\";\nimport { APIResource } from \"../core/resource.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nexport class Webhooks extends APIResource {\n    constructor() {\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */\n    async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */\n    async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === 'undefined' ||\n            typeof crypto.subtle.importKey !== 'function' ||\n            typeof crypto.subtle.verify !== 'function') {\n            throw new Error('Webhook signature verification is only supported when the `crypto` global is defined');\n        }\n        __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = buildHeaders([headers]).values;\n        const signatureHeader = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-signature');\n        const timestamp = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-timestamp');\n        const webhookId = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-id');\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new InvalidWebhookSignatureError('Invalid webhook timestamp format');\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too old');\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too new');\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader\n            .split(' ')\n            .map((part) => (part.startsWith('v1,') ? part.substring(3) : part));\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith('whsec_') ?\n            Buffer.from(secret.replace('whsec_', ''), 'base64')\n            : Buffer.from(secret, 'utf-8');\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey('raw', decodedSecret, { name: 'HMAC', hash: 'SHA-256' }, false, ['verify']);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures) {\n            try {\n                const signatureBytes = Buffer.from(signature, 'base64');\n                const isValid = await crypto.subtle.verify('HMAC', key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            }\n            catch {\n                // Invalid base64 or signature format, continue to next signature\n                continue;\n            }\n        }\n        throw new InvalidWebhookSignatureError('The given webhook signature does not match the expected signature');\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== 'string' || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n};\n//# sourceMappingURL=webhooks.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"./internal/tslib.mjs\";\nimport { uuid4 } from \"./internal/utils/uuid.mjs\";\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from \"./internal/utils/values.mjs\";\nimport { sleep } from \"./internal/utils/sleep.mjs\";\nimport { castToError, isAbortError } from \"./internal/errors.mjs\";\nimport { getPlatformHeaders } from \"./internal/detect-platform.mjs\";\nimport * as Shims from \"./internal/shims.mjs\";\nimport * as Opts from \"./internal/request-options.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport * as Errors from \"./core/error.mjs\";\nimport * as Pagination from \"./core/pagination.mjs\";\nimport * as Uploads from \"./core/uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { APIPromise } from \"./core/api-promise.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Webhooks } from \"./resources/webhooks.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { Containers, } from \"./resources/containers/containers.mjs\";\nimport { Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStores, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { isRunningInBrowser } from \"./internal/detect-platform.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\nimport { readEnv } from \"./internal/utils/env.mjs\";\nimport { formatRequestDetails, loggerFor, parseLogLevel, } from \"./internal/utils/log.mjs\";\nimport { isEmptyObj } from \"./internal/utils/values.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('OPENAI_API_KEY'), organization = readEnv('OPENAI_ORG_ID') ?? null, project = readEnv('OPENAI_PROJECT_ID') ?? null, webhookSecret = readEnv('OPENAI_WEBHOOK_SECRET') ?? null, ...opts } = {}) {\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.webhooks = new API.Webhooks(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = 'warn';\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel =\n            parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n                parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n                defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? Shims.getDefaultFetch();\n        __classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */\n    withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options,\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return Errors.APIError.generate(status, error, message, headers);\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => {\n            return { method, path, ...opts };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining,\n        });\n        await this.prepareRequest(req, { url, options });\n        /** Not an API request ID, just for correlating local log entries. */\n        const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n        const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        loggerFor(this).debug(`[${requestLogID}] sending request`, formatRequestDetails({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers,\n        }));\n        if (options.signal?.aborted) {\n            throw new Errors.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        const headersTime = Date.now();\n        if (response instanceof Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new Errors.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = isAbortError(response) ||\n                /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n            if (retriesRemaining) {\n                loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`);\n            loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`, formatRequestDetails({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message,\n            }));\n            if (isTimeout) {\n                throw new Errors.APIConnectionTimeoutError();\n            }\n            throw new Errors.APIConnectionError({ cause: response });\n        }\n        const specialHeaders = [...response.headers.entries()]\n            .filter(([name]) => name === 'x-request-id')\n            .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n            .join('');\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? 'succeeded' : 'failed'} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await Shims.CancelReadableStream(response.body);\n                loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err) => castToError(err).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime,\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        loggerFor(this).info(responseInfo);\n        loggerFor(this).debug(`[${requestLogID}] response start`, formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n        }));\n        return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new Pagination.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const isReadableBody = (globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream) ||\n            (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...(isReadableBody ? { duplex: 'half' } : {}),\n            method: 'GET',\n            ...options,\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        }\n        finally {\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get('retry-after');\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({ options });\n        const reqHeaders = await this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...(options.signal && { signal: options.signal }),\n            ...(globalThis.ReadableStream &&\n                body instanceof globalThis.ReadableStream && { duplex: 'half' }),\n            ...(body && { body }),\n            ...(this.fetchOptions ?? {}),\n            ...(options.fetchOptions ?? {}),\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount, }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = buildHeaders([\n            idempotencyHeaders,\n            {\n                Accept: 'application/json',\n                'User-Agent': this.getUserAgent(),\n                'X-Stainless-Retry-Count': String(retryCount),\n                ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n                ...getPlatformHeaders(),\n                'OpenAI-Organization': this.organization,\n                'OpenAI-Project': this.project,\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers,\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return { bodyHeaders: undefined, body: undefined };\n        }\n        const headers = buildHeaders([rawHeaders]);\n        if (\n        // Pass raw type verbatim\n        ArrayBuffer.isView(body) ||\n            body instanceof ArrayBuffer ||\n            body instanceof DataView ||\n            (typeof body === 'string' &&\n                // Preserve legacy string encoding behavior for now\n                headers.values.has('content-type')) ||\n            // `Blob` is superset of `File`\n            body instanceof Blob ||\n            // `FormData` -> `multipart/form-data`\n            body instanceof FormData ||\n            // `URLSearchParams` -> `application/x-www-form-urlencoded`\n            body instanceof URLSearchParams ||\n            // Send chunked stream (each chunk has own `length`)\n            (globalThis.ReadableStream && body instanceof globalThis.ReadableStream)) {\n            return { bodyHeaders: undefined, body: body };\n        }\n        else if (typeof body === 'object' &&\n            (Symbol.asyncIterator in body ||\n                (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))) {\n            return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body) };\n        }\n        else {\n            return __classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, { body, headers });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Webhooks = Webhooks;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\n//# sourceMappingURL=client.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../internal/utils/sleep.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/threads/${threadID}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/runs`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, { thread_id: threadId }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(runId, params, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(runId, params, options) {\n        return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = Steps;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(body = {}, options) {\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadID, options) {\n        return this._client.get(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(threadID, options) {\n        return this._client.delete(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { Assistants, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { multipartFormRequestOptions } from \"../../../internal/uploads.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerID, body, options) {\n        return this._client.post(path `/containers/${containerID}/files`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */\n    list(containerID, query = {}, options) {\n        return this._client.getAPIList(path `/containers/${containerID}/files`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(path `/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerID, options) {\n        return this._client.get(path `/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/containers', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    delete(containerID, options) {\n        return this._client.delete(path `/containers/${containerID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nContainers.Files = Files;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { loggerFor, toFloat32Array } from \"../internal/utils.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */\n    list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(path `/evals/${eval_id}/runs/${runID}/output_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */\n    list(evalID, query = {}, options) {\n        return this._client.getAPIList(path `/evals/${evalID}/runs`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete an eval run.\n     */\n    delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = OutputItems;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalID, options) {\n        return this._client.get(path `/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}`, { body, ...options });\n    }\n    /**\n     * List evaluations for a project.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/evals', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    delete(evalID, options) {\n        return this._client.delete(path `/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = Runs;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nimport { sleep } from \"../internal/utils/sleep.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 1 TB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileID, options) {\n        return this._client.get(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/files', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileID, options) {\n        return this._client.delete(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileID, options) {\n        return this._client.get(path `/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { Page } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, (Page), { body, method: 'post', ...options });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */\n    delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(path `/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n}\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Checkpoints extends APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobID, options) {\n        return this._client.get(path `/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/fine_tuning/jobs', (CursorPage), { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/events`, (CursorPage), { query, ...options });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = Checkpoints;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options, stream: body.stream ?? false }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { Page } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(path `/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', (Page), options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    delete(model, options) {\n        return this._client.delete(path `/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class InputItems extends APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(responseID, query = {}, options) {\n        return this._client.getAPIList(path `/responses/${responseID}/input_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=input-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(path `/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    delete(responseID, options) {\n        return this._client.delete(path `/responses/${responseID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseID, options) {\n        return this._client.post(path `/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/parts`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadID, options) {\n        return this._client.post(path `/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils/sleep.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */\n    listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, (CursorPage), { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreID, batchID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: batch, response } = await this.retrieve(batchID, { vector_store_id: vectorStoreID }, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */\n    list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/files`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreID, fileID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID,\n            }, { ...options, headers }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/files/${fileID}/content`, (Page), { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreID, options) {\n        return this._client.get(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/vector_stores', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    delete(vectorStoreID, options) {\n        return this._client.delete(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreID, body, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/search`, (Page), {\n            body,\n            method: 'post',\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","import * as Errors from \"./error.mjs\";\nimport { isObj, readEnv } from \"./internal/utils.mjs\";\nimport { OpenAI } from \"./client.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('AZURE_OPENAI_API_KEY'), apiVersion = readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    async buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    async authHeaders(opts) {\n        return;\n    }\n    async prepareOptions(opts) {\n        opts.headers = buildHeaders([opts.headers]);\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers.values.get('Authorization') || opts.headers.values.get('api-key')) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        if (token) {\n            opts.headers.values.set('Authorization', `Bearer ${token}`);\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers.values.set('api-key', this.apiKey);\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n    '/batches',\n    '/images/edits',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\n//# sourceMappingURL=azure.mjs.map"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","uuid4","crypto","globalThis","randomUUID","bind","u8","Uint8Array","randomByte","getRandomValues","Math","random","replace","c","toString","isAbortError","err","name","String","message","includes","castToError","Error","Object","prototype","error","cause","stack","JSON","stringify","APIError","constructor","status","headers","super","makeMessage","this","requestID","data","code","param","type","msg","generate","errorResponse","APIConnectionError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","InvalidWebhookSignatureError","startsWithSchemeRegexp","val","Array","isArray","isReadonlyArray","isObj","obj","sleep","ms","Promise","resolve","setTimeout","VERSION","getPlatformProperties","detectedPlatform","Deno","build","EdgeRuntime","process","normalizePlatform","os","normalizeArch","arch","version","deno","platform","browserInfo","navigator","browserPatterns","key","pattern","match","exec","userAgent","browser","getBrowserInfo","toLowerCase","_platformHeaders","makeReadableStream","args","ReadableStream","ReadableStreamFrom","iterable","iter","Symbol","asyncIterator","iterator","start","pull","controller","done","next","close","enqueue","cancel","return","ReadableStreamToAsyncIterable","stream","reader","getReader","result","read","releaseLock","e","cancelPromise","FallbackEncoder","body","bodyHeaders","default_format","default_formatter","v","formatters","RFC1738","RFC3986","hasOwn","Function","hasOwnProperty","hex_table","array","i","push","toUpperCase","limit","maybe_map","fn","mapped","length","array_prefix_generators","brackets","prefix","comma","indices","repeat","push_to_array","arr","value_or_array","apply","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","str","_defaultEncoder","_kind","format","string","escape","$0","parseInt","slice","out","j","segment","charCodeAt","charAt","join","encodeValuesOnly","formatter","serializeDate","date","Date","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","tmp_sc","step","find_flag","pos","RangeError","isBuffer","is_buffer","key_value","values","obj_keys","keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","valueSideChannel","WeakMap","encodeUTF8_","decodeUTF8_","TextEncoder","decodeUTF8","bytes","decoder","TextDecoder","decode","_LineDecoder_buffer","_LineDecoder_carriageReturnIndex","LineDecoder","chunk","binaryChunk","ArrayBuffer","buffers","buffer","output","index","concatBytes","lines","patternIndex","findNewlineIndex","carriage","subarray","endIndex","preceding","line","flush","startIndex","findDoubleNewlineIndex","NEWLINE_CHARS","Set","NEWLINE_REGEXP","levelNumbers","off","warn","info","debug","parseLogLevel","maybeLevel","sourceName","client","loggerFor","noop","makeLogFn","fnLevel","logger","logLevel","noopLogger","cachedLoggers","cachedLogger","levelLogger","formatRequestDetails","details","options","fromEntries","Headers","entries","map","retryOfRequestLogID","retryOf","_Stream_client","_APIPromise_client","_AbstractPage_client","Stream","fromSSEResponse","response","consumed","console","async","sse","abort","product","sseDecoder","SSEDecoder","lineDecoder","sseChunk","newData","iterSSEChunks","_iterSSEMessages","startsWith","event","parse","raw","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","self","ctrl","chunks","endsWith","substring","fieldname","_","indexOf","partition","defaultParseResponse","props","requestLogID","startTime","url","__streamClass","__binaryResponse","contentType","mediaType","split","trim","addRequestID","json","text","durationMs","now","defineProperty","enumerable","APIPromise","responsePromise","parseResponse","_thenUnwrap","transform","asResponse","then","p","withResponse","all","request_id","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","AbstractPage","hasNextPage","getPaginatedItems","nextPageRequestOptions","getNextPage","nextOptions","requestAPIList","iterPages","page","item","PagePromise","request","Page","CursorPage","has_more","id","query","x","after","checkFileSupport","File","isOldNode","versions","node","makeFile","fileBits","fileName","getName","filename","path","pop","isAsyncIterable","multipartFormRequestOptions","opts","fetch","createForm","supportsFormDataMap","fetchObject","cached","promise","FetchResponse","Response","FormData","supportsFormData","form","addFormValue","append","blob","Blob","isNamedBlob","entry","prop","isBlobLike","size","arrayBuffer","getBytes","parts","isView","getOwnPropertyNames","propsForError","APIResource","_client","encodeURIPath","encodeURIComponent","EMPTY","freeze","create","createPathTagFunction","pathEncoder","statics","params","postPath","invalidSegments","reduce","previousValue","currentValue","test","encoded","getPrototypeOf","pathOnly","invalidSegmentPattern","a","b","lastEnd","underline","acc","spaces","arrows","Messages","list","completionID","getAPIList","isChatCompletionFunctionTool","tool","function","isAutoParsableResponseFormat","response_format","isAutoParsableTool","parseChatCompletion","completion","choices","choice","finish_reason","assertToolCallsAreChatCompletionFunctionToolCalls","tool_calls","toolCall","inputTool","tools","find","parsed_arguments","$parseRaw","arguments","strict","parseToolCall","parsed","content","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","toolCalls","isAssistantMessage","role","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","EventStream","add","AbortController","reject","_run","executor","_emitFinal","_emit","_connected","ended","errored","aborted","on","listener","listeners","findIndex","l","splice","once","emitted","forEach","isRunnableFunctionWithParse","WeakSet","openAIError","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","messages","_addChatCompletion","chatCompletion","_addMessage","emit","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionToolCall","finalFunctionToolCallResult","totalUsage","allChatCompletions","finalFunctionCall","finalFunctionCallResult","usage","_createChatCompletion","signal","addEventListener","chat","completions","_runChatCompletion","_runTools","tool_choice","restParams","singleFunctionToCall","maxChatCompletions","inputTools","$callback","description","parameters","functionsByName","tool_call_id","rawContent","at","y","total","completion_tokens","prompt_tokens","total_tokens","n","ChatCompletionRunner","runTools","runner","PartialJSON","MalformedJSON","partialParse","input","jsonString","allowPartial","ATOM","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","Number","lastIndexOf","writable","configurable","_parseJSON","parseJSON","Allow","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","delta","snapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","assertNever","toolCallIndex","responseFormat","created","model","system_fingerprint","rest","choiceRest","function_call","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","_a","_b","_c","_d","assign","other","assertIsEmpty","pushQueue","readQueue","_x","ChatCompletionStreamingRunner","Completions","post","retrieve","update","delete","validateInputTools","Chat","brand_privateNullableHeaders","iterateHeaders","nulls","shouldClear","row","didClear","buildHeaders","newHeaders","targetHeaders","nullHeaders","seenHeaders","lowerName","Speech","Accept","Transcriptions","__metadata","Translations","Audio","transcriptions","translations","speech","Batches","batchID","Assistants","assistantID","Sessions","TranscriptionSessions","Realtime","sessions","transcriptionSessions","threadID","messageID","thread_id","Steps","stepID","run_id","runID","readEnv","env","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","_Webhooks_instances","_Webhooks_validateSecret","_Webhooks_getRequiredHeader","_OpenAI_instances","_OpenAI_encoder","_OpenAI_baseURLOverridden","AssistantStream","_addRun","createToolAssistantStream","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","threadId","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","deltaValue","accValue","every","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","step_details","accumulated","contentElement","Runs","steps","include","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","isNaN","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","createAndRunPoll","createAndRunStream","Beta","realtime","assistants","Content","fileID","container_id","Files","containerID","Containers","files","Embeddings","hasUserProvidedEncodingFormat","encoding_format","embeddingBase64Obj","embeddingBase64Str","embedding","base64Str","Buffer","buf","from","Float32Array","byteOffset","BYTES_PER_ELEMENT","binaryStr","atob","len","toFloat32Array","OutputItems","outputItemID","eval_id","outputItems","evalID","Evals","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","file","Methods","Graders","validate","Alpha","graders","Permissions","fineTunedModelCheckpoint","method","permissionID","fine_tuned_model_checkpoint","Checkpoints","permissions","fineTuningJobID","Jobs","checkpoints","listEvents","pause","resume","FineTuning","methods","jobs","alpha","GraderModels","graderModels","Images","createVariation","edit","Models","Moderations","parseTextFormat","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","ResponseStream","createResponse","_createOrRetrieveResponse","starting_after","responses","response_id","maybeEmit","sequence_number","output_index","content_index","parsedResponse","output_parsed","maybeParseResponse","finalizeResponse","part","finalResponse","InputItems","responseID","Responses","inputItems","Parts","uploadID","Uploads","complete","FileBatches","vectorStoreID","vector_store_id","vectorStoreId","batch","listFiles","uploadAndPoll","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","min","fileIterator","allFileIds","workers","fill","fileObj","purpose","promises","results","allSettled","rejected","reason","allSettledWithThrow","file_ids","fileResponse","upload","fileInfo","file_id","VectorStores","fileBatches","search","Webhooks","unwrap","payload","secret","webhookSecret","tolerance","verifySignature","subtle","importKey","verify","headersObj","signatureHeader","timestamp","webhookId","timestampSeconds","nowSeconds","floor","signatures","decodedSecret","signedPayload","hash","signature","signatureBytes","OpenAI","baseURL","apiKey","organization","project","embeddings","images","audio","moderations","models","fineTuning","vectorStores","webhooks","batches","uploads","evals","containers","dangerouslyAllowBrowser","window","document","timeout","DEFAULT_TIMEOUT","defaultLogLevel","fetchOptions","maxRetries","_options","withOptions","defaultQuery","validateHeaders","authHeaders","Authorization","stringifyQuery","normalize_stringify_options","joined","getUserAgent","defaultIdempotencyKey","makeStatusError","buildURL","defaultBaseURL","isAbsoluteURL","URL","_k","isEmptyObj","prepareOptions","prepareRequest","methodRequest","patch","put","remainingRetries","makeRequest","optionsInput","retriesRemaining","req","buildRequest","retryCount","padStart","retryLogStr","fetchWithTimeout","headersTime","retryMessage","isTimeout","retryRequest","responseInfo","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","init","isReadableBody","duplex","clearTimeout","shouldRetryHeader","responseHeaders","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","retryAfterHeader","timeoutSeconds","calculateDefaultRetryTimeoutMillis","numRetries","pow","inputOptions","isInteger","validatePositiveInteger","buildBody","idempotencyHeaders","idempotencyHeader","idempotencyKey","trunc","defaultHeaders","rawHeaders","DataView","URLSearchParams","OpenAIError","toFile","lastModified","isFileLike","isResponseLike","pathname"],"sourceRoot":""}